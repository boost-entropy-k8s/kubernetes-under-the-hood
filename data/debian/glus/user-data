#cloud-config

write_files:

# CA ssh pub certificate
- path: /etc/ssh/sshd_config
  permissions: '0644'
  content: |
    TrustedUserCAKeys /etc/ssh/ca.pub
  append: true

# CA ssh pub certificate
- path: /etc/ssh/ca.pub
  permissions: '0644'
  encoding: b64
  content: |
    c3NoLWVkMjU1MTkgQUFBQUMzTnphQzFsWkRJMU5URTVBQUFBSUZWTW1rTnRuRmZDaXRjcFFlWnFR
    dVZQK0NKV1JtWGp3aGlRakoyalJxaS8gY2FAa3ViZS5kZW1vCg==

- path: /etc/rc.local
  permissions: '0755'
  content: |
    #!/bin/sh -e

    setfacl -m u::rwx /srv/store
    setfacl -m g::rwx /srv/store
    setfacl -m o::rwx /srv/store

    setfacl -d -m u::rwx /srv/store
    setfacl -d -m g::rwx /srv/store
    setfacl -d -m o::rwx /srv/store

    exit 0

- path: /etc/modules-load.d/bridge.conf
  permissions: '0644'
  content: |
    br_netfilter

- path: /etc/sysctl.d/10-kubernetes.conf
  permissions: '0644'
  content: |
    net.ipv4.ip_forward=1
    net.bridge.bridge-nf-call-iptables=1
    net.bridge.bridge-nf-call-arptables=1

- path: /etc/docker/daemon.json
  permissions: '0644'
  content: |
    {
      "exec-opts": ["native.cgroupdriver=systemd"],
      "log-driver": "json-file",
      "storage-driver": "overlay2",
      "log-opts": {
        "max-size": "100m"
      }
    }

apt:
  sources_list: |
    deb http://deb.debian.org/debian/ $RELEASE main contrib non-free
    deb-src http://deb.debian.org/debian/ $RELEASE main contrib non-free

    deb http://deb.debian.org/debian/ $RELEASE-updates main contrib non-free
    deb-src http://deb.debian.org/debian/ $RELEASE-updates main contrib non-free

    deb http://deb.debian.org/debian-security $RELEASE-security main
    deb-src http://deb.debian.org/debian-security $RELEASE-security main
  conf: |
    APT {
      Get {
        Assume-Yes "true";
        Fix-Broken "true";
      };
    };

packages: 
  - apt-transport-https
  - ca-certificates
  - gnupg2
  - software-properties-common
  - bridge-utils
  - thin-provisioning-tools
  - lvm2
  - acl
  - xfsprogs
  - curl

disk_setup:
  /dev/sdb:
    table_type: gpt
    layout:
      - [100, 31]
    overwrite: true

runcmd:
  - [ modprobe, br_netfilter ]
  - [ sysctl, --system ]
  # SSH server to trust the CA
  - [ sh, -c, 'curl -s https://download.docker.com/linux/debian/gpg | apt-key add -' ]
  - [ sh, -c, 'curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -' ]
  - [ apt-key, fingerprint, '0EBFCD88' ]
  - [ sh, -c, 'echo deb [arch=amd64] https://download.docker.com/linux/debian stretch stable > /etc/apt/sources.list.d/docker-ce.list' ]
  - [ sh, -c, 'echo deb https://apt.kubernetes.io/ kubernetes-xenial main > /etc/apt/sources.list.d/kubernetes.list' ]
  - [ apt-get, update ]
  - [ apt-get, install, -y, 'docker-ce=18.06.0~ce~3-0~debian', containerd.io, 'kubectl=1.15.6-00', 'kubelet=1.15.6-00', 'kubeadm=1.15.6-00' ]
  - [ apt-mark, hold, kubectl, kubelet, kubeadm, docker-ce, containerd.io ]
  # Prepare storage disk
  - [ pvcreate, --dataalignment, "128K", "/dev/sdb1" ]
  - [ vgcreate, --physicalextentsize, "128K", "vg01", "/dev/sdb1" ]
  - [ lvcreate, --wipesignatures, "y", -l, "95%VG", --name, "pool", "vg01" ]
  - [ lvcreate, --wipesignatures, "y", -l, "1%VG", --name, "pool-meta", "vg01" ]
  - [ lvconvert, -y, --zero, "n", --chunksize, "1280K", --thinpool, "vg01/pool", --poolmetadata, "vg01/pool-meta" ]
  - [ lvcreate, --wipesignatures, "y", -V, "400G", -T, "vg01/pool", -n, "store" ]
  # Format logical volume
  - [ mkfs.xfs, -f, -i, "size=512", -n, "size=8192", -d, "su=1280k,sw=1", "/dev/vg01/store" ]
  # create mount point store
  - [ mkdir, -p, /srv/store ]
  - [ sh, -c, 'echo /dev/vg01/store         /srv/store      xfs     rw,inode64,noatime,nouuid       1       2 >> /etc/fstab' ]

users:
- name: debian
  gecos: Debian User
  sudo: ALL=(ALL) NOPASSWD:ALL
  shell: /bin/bash
  lock_passwd: true
  ssh_authorized_keys:
    - #SSH-PUB-KEY#
- name: root
  lock_passwd: true
  ssh_authorized_keys:
    - #SSH-PUB-KEY#

locale: en_US.UTF-8

timezone: UTC

ssh_deletekeys: 1

package_upgrade: true

ssh_pwauth: false

manage_etc_hosts: true

fqdn: #HOSTNAME#.kube.demo

hostname: #HOSTNAME#

power_state:
  mode: reboot
  timeout: 30
  condition: true
